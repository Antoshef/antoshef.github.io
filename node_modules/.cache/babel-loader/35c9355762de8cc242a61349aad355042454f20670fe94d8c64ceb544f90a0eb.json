{"ast":null,"code":"var _jsxFileName = \"/Users/antoshef/code/Portfolio Project/antoshef.github.io/src/Experience/SingleExperience.tsx\";\nimport React, { memo } from 'react';\nimport assets from './assets.json';\nimport './Experience.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleExperience = ({\n  name\n}) => {\n  const asset = assets.find(asset => asset.company === name);\n  if (!asset) return null;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"single-experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"single-experience__link\",\n        href: asset.link,\n        children: asset.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: asset.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: asset.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), asset.descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, asset.company + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tech Stack: \", asset.stack.join('')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = SingleExperience;\nexport default _c2 = /*#__PURE__*/memo(SingleExperience);\nvar _c, _c2;\n$RefreshReg$(_c, \"SingleExperience\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","assets","jsxDEV","_jsxDEV","SingleExperience","name","asset","find","company","className","children","href","link","fileName","_jsxFileName","lineNumber","columnNumber","position","date","descriptions","map","description","index","stack","join","_c","_c2","$RefreshReg$"],"sources":["/Users/antoshef/code/Portfolio Project/antoshef.github.io/src/Experience/SingleExperience.tsx"],"sourcesContent":["import React, { FC, memo } from 'react';\nimport assets from './assets.json';\nimport './Experience.scss';\n\ntype AssetType = {\n  company: string;\n  position: string;\n  link: string;\n  date: string;\n  descriptions: string[];\n  stack: string[];\n};\n\ntype Props = {\n  name: string;\n};\n\nconst SingleExperience: FC<Props> = ({ name }) => {\n  const asset = assets.find((asset) => asset.company === name) as\n    | AssetType\n    | undefined;\n\n  if (!asset) return null;\n\n  return (\n    <article className='single-experience'>\n      <h3>\n        <a className='single-experience__link' href={asset.link}>{asset.company}</a>\n      </h3>\n      <h4>{asset.position}</h4>\n      <p>{asset.date}</p>\n      {asset.descriptions.map((description, index) => (\n        <p key={asset.company + index}>{description}</p>\n      ))}\n      <p>Tech Stack: {asset.stack.join('')}</p>\n    </article>\n  );\n};\n\nexport default memo(SingleExperience);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAQC,IAAI,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe3B,MAAMC,gBAA2B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChD,MAAMC,KAAK,GAAGL,MAAM,CAACM,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACE,OAAO,KAAKH,IAAI,CAE9C;EAEb,IAAI,CAACC,KAAK,EAAE,OAAO,IAAI;EAEvB,oBACEH,OAAA;IAASM,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBACpCP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAGM,SAAS,EAAC,yBAAyB;QAACE,IAAI,EAAEL,KAAK,CAACM,IAAK;QAAAF,QAAA,EAAEJ,KAAK,CAACE;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACLb,OAAA;MAAAO,QAAA,EAAKJ,KAAK,CAACW;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBb,OAAA;MAAAO,QAAA,EAAIJ,KAAK,CAACY;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBV,KAAK,CAACa,YAAY,CAACC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACzCnB,OAAA;MAAAO,QAAA,EAAgCW;IAAW,GAAnCf,KAAK,CAACE,OAAO,GAAGc,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAChD,CAAC,eACFb,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACJ,KAAK,CAACiB,KAAK,CAACC,IAAI,CAAC,EAAE,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAACS,EAAA,GApBIrB,gBAA2B;AAsBjC,eAAAsB,GAAA,gBAAe1B,IAAI,CAACI,gBAAgB,CAAC;AAAC,IAAAqB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}