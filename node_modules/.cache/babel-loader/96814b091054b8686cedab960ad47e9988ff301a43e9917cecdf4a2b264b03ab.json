{"ast":null,"code":"var _jsxFileName = \"/Users/antoshef/code/Portfolio Project/src/Experience/SingleExperience.tsx\";\nimport React, { memo } from 'react';\nimport assets from './assets.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleExperience = ({\n  name\n}) => {\n  const asset = assets.find(asset => asset.company === name);\n  console.log(asset, 'ASSETS');\n  if (!asset) return null;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: asset.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        children: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, company + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = SingleExperience;\nexport default _c2 = /*#__PURE__*/memo(SingleExperience);\nvar _c, _c2;\n$RefreshReg$(_c, \"SingleExperience\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","assets","jsxDEV","_jsxDEV","SingleExperience","name","asset","find","company","console","log","children","position","fileName","_jsxFileName","lineNumber","columnNumber","date","href","link","descriptions","map","description","index","_c","_c2","$RefreshReg$"],"sources":["/Users/antoshef/code/Portfolio Project/src/Experience/SingleExperience.tsx"],"sourcesContent":["import React, { FC, memo } from 'react';\nimport assets from './assets.json';\n\ntype Props = {\n  name: string;\n};\n\nconst SingleExperience: FC<Props> = ({ name }) => {\n  const asset = assets.find(\n    (asset) => asset.company === name,\n  ) as {\n    company: string;\n    position: string;\n    link: string;\n    date: string;\n    descriptions: string[];\n  } | undefined;\n\n  console.log(asset, 'ASSETS');\n\n  if (!asset) return null;\n\n  return (\n    <article>\n      <h3>{asset.position}</h3>\n      <h4>{date}</h4>\n      <p>\n        <a href={link}>{company}</a>\n      </p>\n      {descriptions.map((description, index) => (\n        <p key={company + index}>{description}</p>\n      ))}\n    </article>\n  );\n};\n\nexport default memo(SingleExperience);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAQC,IAAI,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnC,MAAMC,gBAA2B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChD,MAAMC,KAAK,GAAGL,MAAM,CAACM,IAAI,CACtBD,KAAK,IAAKA,KAAK,CAACE,OAAO,KAAKH,IAC/B,CAMa;EAEbI,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAE,QAAQ,CAAC;EAE5B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,oBACEH,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAKL,KAAK,CAACM;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBb,OAAA;MAAAQ,QAAA,EAAKM;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfb,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAGe,IAAI,EAAEC,IAAK;QAAAR,QAAA,EAAEH;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EACHI,YAAY,CAACC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACnCpB,OAAA;MAAAQ,QAAA,EAA0BW;IAAW,GAA7Bd,OAAO,GAAGe,KAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACQ,EAAA,GA3BIpB,gBAA2B;AA6BjC,eAAAqB,GAAA,gBAAezB,IAAI,CAACI,gBAAgB,CAAC;AAAC,IAAAoB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}